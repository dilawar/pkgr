!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DEFAULT_APPS	pkgr/data.py	/^DEFAULT_APPS = json.loads($/;"	v
DOCKER_IO_URL	pkgr/data.py	/^DOCKER_IO_URL = "https:\/\/registry.hub.docker.com\/v2\/repositories\/library\/{dist}\/tags"$/;"	v
IMAGES	pkgr/data.py	/^IMAGES = dict($/;"	v
INSTALL_CMDS	pkgr/data.py	/^INSTALL_CMDS = json.loads($/;"	v
PKGR	Makefile	/^PKGR := poetry run pkgr$/;"	m
Path	pkgr/config.py	/^from pathlib import Path$/;"	i
Path	pkgr/pkgr.py	/^from pathlib import Path$/;"	i
Path	pkgr/rpm.py	/^from pathlib import Path$/;"	i
T	pkgr/config.py	/^import typing as T$/;"	i
T	pkgr/data.py	/^import typing as T$/;"	i
T	pkgr/pkgr.py	/^import typing as T$/;"	i
T	pkgr/rpm.py	/^import typing as T$/;"	i
__author__	pkgr/config.py	/^__author__ = "Dilawar Singh"$/;"	v
__author__	pkgr/data.py	/^__author__ = "Dilawar Singh"$/;"	v
__author__	pkgr/deb.py	/^__author__ = "Dilawar Singh"$/;"	v
__author__	pkgr/docker.py	/^__author__ = "Dilawar Singh"$/;"	v
__author__	pkgr/pkgr.py	/^__author__ = "Dilawar Singh"$/;"	v
__author__	pkgr/rpm.py	/^__author__ = "Dilawar Singh"$/;"	v
__author__	pkgr/templates.py	/^__author__           = "Dilawar Singh"$/;"	v
__email__	pkgr/config.py	/^__email__ = "dilawar.s.rajput@gmail.com"$/;"	v
__email__	pkgr/data.py	/^__email__ = "dilawar.s.rajput@gmail.com"$/;"	v
__email__	pkgr/deb.py	/^__email__ = "dilawar.s.rajput@gmail.com"$/;"	v
__email__	pkgr/docker.py	/^__email__ = "dilawar.s.rajput@gmail.com"$/;"	v
__email__	pkgr/pkgr.py	/^__email__ = "dilawar.s.rajput@gmail.com"$/;"	v
__email__	pkgr/rpm.py	/^__email__ = "dilawar.s.rajput@gmail.com"$/;"	v
__email__	pkgr/templates.py	/^__email__            = "dilawar.s.rajput@gmail.com"$/;"	v
__version__	pkgr/__init__.py	/^__version__ = '0.1.0'$/;"	v
__version__	tests/test_pkgr.py	/^from pkgr import __version__$/;"	i
_dict2str	pkgr/config.py	/^def _dict2str(val, basepath: T.Optional[Path] = None):$/;"	f
_gen_build_requires	pkgr/rpm.py	/^def _gen_build_requires(builddeps: T.List[str]) -> str:$/;"	f
_gen_requires	pkgr/rpm.py	/^def _gen_requires(reqs: T.List[str]) -> str:$/;"	f
_generate_spec_str	pkgr/rpm.py	/^def _generate_spec_str(config: T.Dict[str, T.Any]) -> str:$/;"	f
_get_best_match	pkgr/data.py	/^def _get_best_match(data: T.Dict[str, T.Any], key: str) -> T.Any:$/;"	f
_get_run_commands	pkgr/docker.py	/^def _get_run_commands(config, distribution, release) -> str:$/;"	f
_to_str	pkgr/config.py	/^def _to_str(val: T.Any, basepath: T.Optional[Path] = None) -> str:$/;"	f
app	pkgr/deb.py	/^app = typer.Typer()$/;"	v
app	pkgr/pkgr.py	/^app = typer.Typer()$/;"	v
app	pkgr/rpm.py	/^app = typer.Typer()$/;"	v
centos	pkgr/data.py	/^    centos={"latest": "centos:latest", "8": "centos:8", "7": "centos:7"},$/;"	v
config	pkgr/config.py	/^def config() -> T.Dict[str, T.Any]:$/;"	f
config	pkgr/docker.py	/^import pkgr.config$/;"	i
config	pkgr/rpm.py	/^import pkgr.config$/;"	i
config_dir	pkgr/config.py	/^def config_dir() -> Path:$/;"	f
data	pkgr/docker.py	/^import pkgr.data$/;"	i
data	pkgr/rpm.py	/^import pkgr.data$/;"	i
deb	pkgr/pkgr.py	/^import pkgr.deb$/;"	i
docker	pkgr/rpm.py	/^import pkgr.docker$/;"	i
fedora	pkgr/data.py	/^    fedora={"latest": "fedora:latest"},$/;"	v
find_tags	pkgr/data.py	/^def find_tags(dist: str):$/;"	f
generate	pkgr/rpm.py	/^def generate($/;"	f
get	pkgr/config.py	/^def get(config: T.Dict[str, T.Any], key: str, default=None):$/;"	f
get_image	pkgr/data.py	/^def get_image(distribution: str, release: str = "latest") -> str:$/;"	f
get_install_cmd	pkgr/data.py	/^def get_install_cmd(dist, release) -> str:$/;"	f
get_val	pkgr/config.py	/^def get_val(key: str, default=None):$/;"	f
json	pkgr/data.py	/^import json$/;"	i
load	pkgr/config.py	/^def load(tomlfile: Path):$/;"	f
logger	pkgr/data.py	/^from loguru import logger$/;"	i
logger	pkgr/docker.py	/^from loguru import logger$/;"	i
logger	pkgr/pkgr.py	/^from loguru import logger$/;"	i
logger	pkgr/rpm.py	/^from loguru import logger$/;"	i
main	pkgr/pkgr.py	/^def main():$/;"	f
opensuse	pkgr/data.py	/^    opensuse={"latest": "opensuse\/tumbleweed", "15.3": "opensuse\/leap:15.3"},$/;"	v
pkgr	pkgr/docker.py	/^import pkgr.config$/;"	i
pkgr	pkgr/docker.py	/^import pkgr.data$/;"	i
pkgr	pkgr/docker.py	/^import pkgr.templates$/;"	i
pkgr	pkgr/pkgr.py	/^import pkgr.deb$/;"	i
pkgr	pkgr/pkgr.py	/^import pkgr.rpm$/;"	i
pkgr	pkgr/rpm.py	/^import pkgr.config$/;"	i
pkgr	pkgr/rpm.py	/^import pkgr.data$/;"	i
pkgr	pkgr/rpm.py	/^import pkgr.docker$/;"	i
pkgr	pkgr/rpm.py	/^import pkgr.templates$/;"	i
re	pkgr/data.py	/^import re$/;"	i
request	pkgr/data.py	/^import urllib.request$/;"	i
rpm	pkgr/pkgr.py	/^import pkgr.rpm$/;"	i
templates	pkgr/docker.py	/^import pkgr.templates$/;"	i
templates	pkgr/rpm.py	/^import pkgr.templates$/;"	i
test_install_cmds	pkgr/data.py	/^def test_install_cmds():$/;"	f
test_version	tests/test_pkgr.py	/^def test_version():$/;"	f
toml	pkgr/config.py	/^import toml$/;"	i
toml	pkgr/pkgr.py	/^import toml$/;"	i
typer	pkgr/deb.py	/^import typer$/;"	i
typer	pkgr/pkgr.py	/^import typer$/;"	i
typer	pkgr/rpm.py	/^import typer$/;"	i
ubuntu	pkgr/data.py	/^    ubuntu={$/;"	v
urllib	pkgr/data.py	/^import urllib.request$/;"	i
write_docker	pkgr/docker.py	/^def write_docker(dockerfile, config, distribution: str, release: str):$/;"	f
